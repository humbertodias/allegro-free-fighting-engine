#!/bin/bash
#
#  Original Makefile by Duncan Mac-Vicar (duncan@linuxfan.com)
#
# ric@asbyte.com.br

# Function do_find ----------------------------------------------------------
do_find(){
export temp=$(find $1 -name $2 2>/dev/null | tail -n 1) 
if [ "$temp" ]; then
    echo "   $temp OK!"
else
    echo -e "\a    *** ERROR: $2 NOT FOUND! ***"
    echo "  ---> $3"
    echo
    exit 0
fi
}
# ---------------------------------------------------------------------------

# Start variables -----------------------------------------------------------
export system=$(uname)
echo "OS is: $system"
case $system in
     Linux)
      export dir_bin="/usr/bin/ /usr/local/bin/ /bin/ "
      export dir_lib="$(cat /etc/ld.so.conf) /usr/lib"
      ;;
     *)
      echo -e "\a     *** ERROR: Not implemented for $system system... "
      exit 1
esac

# GCC ----------------------------------------------------------------------
echo "Finding gcc..."
do_find "$dir_bin" gcc "Install: gcc or egcs"
export gcc=$temp
echo 
# --------------------------------------------------------------------------

# make ---------------------------------------------------------------------
echo "Finding make..."
do_find "$dir_bin" make "Install make"
export make=temp
echo
# --------------------------------------------------------------------------
# Find includes ------------------------------------------------------------
case "$system" in
  Linux)
#   echo "Finding $system Kernel tree...(for generic includes)"
#   export temp=$( ls /usr/src/linux )
#   if [ "$temp" ]; then
#       echo "   /usr/src/linux OK!"
#   else
#       echo -e "\a    *** ERROR: directory /usr/src/linux NOT FOUND! ***"
#       echo "  ---> get the linux-$(uname -r).tar.gz file"
#       echo "        in ftp://sunsite.unc.edu/pub/linux/kernel"
#       echo
#       exit 0
#   fi
#   echo
    echo "#define SO LINUX" > so.inc
        ;;
  *)
        echo -e "\a    *** ERROR: Not implemented for $system system... "
        exit 1
esac
# ---------------------------------------------------------------------------

# Find Allegro --------------------------------------------------------------
echo "Finding allegro..."
do_find "$dir_lib" "liballeg*" "Download from: http://sunsite.dk/allegro/wip.html"
export allegro=$(echo $temp | cut -c19- | cut -d"." -f1,2,3) 
echo ALLEGRO version: $allegro
echo 
# ---------------------------------------------------------------------------
# Find almp3 Lib 
echo "Finding almp3 Lib..."
do_find "$dir_lib" "libalmp3*" "Download from: http://www.hero6.com/filereviver/almp3.zip"
export almp3=$(echo $temp | cut -c19- | cut -d"." -f1) 
echo ALMP3: $almp3
echo
# Finding Nemo --------------------------------------------------------------
echo "Finding Nemo..."
echo "Nemo is Ok"
cat << EOFNEMO 
 o   __/|_ 
  o./ ï¿½)))\/|
    O__))_/\|
       \|
EOFNEMO
# --------------------------------------------------------------------------
#
# creating Makefile ----------------------------------------------------------
echo "creating Makefile..."
if [ -f ./Makefile ]; then
   echo -n "Ovewrite old Makefile ? (yes/no) "
   read typeyn
   if [ $typeyn != "yes" ]; then
      exit 0
   fi  
      export temp=$(ls *Makefile.* | cat -n | cut -f1 | tail -n1).Makefile.old
      echo "old Makefile renamed for: $temp"
      mv Makefile $temp
fi

cat <<EOF > Makefile
##############################################################
# $system Makefile of FFE 
#    Original Makefile by Duncan Mac-Vicar (duncan@linuxfan.com)
#  
# Rick Leite (ric@asbyte.com.br)
# Claudemir P. da Luz Jr. <claudemir@virtuallink.com.b>

LIBS=$allegro alleg_unsharable $almp3
INCLUDE=/usr/local/include
LOAD=/usr/X11R6/lib
EXEC=../kof2003
GH=config.h global.h macros.h defs.h
OBJS=batle.o display.o inits.o intro.o loads.o logger.o main.o palettes.o \
monitor.o moves.o mp3.o refresh.o screenshot.o startmenu.o initfiles.o \
wavsounds.o sprites.o effects.o options.o

#CC=$gcc
# TODO - MINE
CC=clang
#CFLAGS=-g -W -O3 -static
#CFLAGS=-g -Wall -Werror -O6 -Werror=deprecated-declarations -Werror -Winvalid-source-encoding -Wheader-guard
CFLAGS=-g -Wall -Werror -O3 -Werror=deprecated-declarations -Werror -Winvalid-source-encoding -Wheader-guard

EOF
# ---------------------------------------------------------------------------

# Set the Makefile for especific SO -----------------------------------------
case $system in
     Linux)
      echo "include makefile.lnx" >> Makefile
      ;;
     *)
      echo -e "\a  *** ERROR: Not implemented for $system system... "
      exit 1
esac
# ---------------------------------------------------------------------------

echo
echo Type:
echo "    make all" 
